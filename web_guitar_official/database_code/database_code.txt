drop table "KORV".CUSTOMER;
drop table "KORV".APPOINTMENT;
drop table "KORV".REPAIR;
drop table "KORV".LEAVE;
drop table "KORV".TIME_RESERVATION;
drop table "KORV".SHOP;
drop table "KORV".BUDGET;


create table "KORV".TIME_RESERVATION
(
	TIME_RESERVATION_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	START_TIME TIME,
	STOP_TIME TIME,
	RESERVATION_DATE DATE
);

create table "KORV".LEAVE
(
	LEAVE_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	TIME_RESERVATION_ID_FK INTEGER
);

create table "KORV".REPAIR
(
	REPAIR_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	INFO VARCHAR(256),
	TIME_RESERVATION_ID_FK INTEGER
);

create table "KORV".APPOINTMENT
(
	APPOINTMENT_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	INFO VARCHAR(256),
	IMAGE_URL VARCHAR(256),
	TIME_RESERVATION_ID_FK INTEGER
);


create table "KORV".CUSTOMER
(
	CUSTOMER_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	EMAIL VARCHAR(100),
	PHONE_NR VARCHAR(20),
	FIRST_NAME VARCHAR(50),
	LAST_NAME VARCHAR(50),
	APPOINTMENT_ID_FK INTEGER
);

create table "KORV".SHOP
(
	SHOP_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	TITLE varchar(64),
	IMAGE_URL varchar(256),
	INFO varchar(1024),
	PRICE INTEGER,
	CUSTOMER_ID_FK INTEGER
);

create table "KORV".BUDGET
(
	BUDGET_ID INTEGER not null primary key
		GENERATED ALWAYS AS IDENTITY
		(START WITH 1, INCREMENT BY 1),
	AMOUNT INTEGER,
	INFO varchar(512),
	DATE_TIME DATE
);
